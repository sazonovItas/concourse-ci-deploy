--- # ConfigMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-configmap
  namespace: monitoring
data:
  prometheus.local.yaml: |
    global:
      keep_dropped_targets: 100
      scrape_interval: 15s
      scrape_timeout: 5s
    scrape_configs:
      - job_name: "prometheus"
        static_configs:
          - targets: [ "localhost:9090" ]
      - job_name: "k3s-pods"
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod_name
          - source_labels: [__meta_kubernetes_pod_container_name]
            action: replace
            target_label: pod_container_name
          - source_labels: [__meta_kubernetes_pod_container_image]
            action: replace
            target_label: pod_container_image
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
            separator: /
            action: replace
            target_label: job
--- # Deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus-serviceaccount
      containers:
      - name: prometheus
        image: prom/prometheus
        imagePullPolicy: IfNotPresent
        args:
        - "--config.file=/etc/prometheus/prometheus.local.yaml"
        ports:
        - name: prometheus
          containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
          readOnly: true
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-configmap
--- # Service.yaml
apiVersion: v1
kind: Service
metadata:
  name: prometheus-svc
  namespace: monitoring
  labels:
    service: prometheus
spec:
  type: ClusterIP
  selector:
    app: prometheus
  ports:
  - name: prom-svc
    protocol: TCP
    port: 9090
    targetPort: prometheus
--- # ClusterRole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-clusterrole
  namespace: monitoring
rules:
  - apiGroups: [ "" ]
    resources:
      - pods
      - nodes
      - services
    verbs:
      - get
      - watch
      - list
--- # ServiceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-serviceaccount
  namespace: monitoring
--- # ClusterRoleBinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-serviceaccount
  namespace: monitoring
subjects:
  - kind: ServiceAccount
    name: prometheus-serviceaccount
    namespace: monitoring
roleRef:
  kind: ClusterRole
  name: prometheus-clusterrole
  apiGroup: rbac.authorization.k8s.io

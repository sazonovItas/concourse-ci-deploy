--- # ConfigMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-configmap
  namespace: monitoring
data:
  promtail.local.yaml: |
    server:
      http_listen_port: 9080

    clients:
    - url: http://loki-svc:3100/loki/api/v1/push

    positions:
      filename: /tmp/positions.yaml
    target_config:
      sync_period: 10s
    scrape_configs:
    - job_name: k3s-pod-logs
      kubernetes_sd_configs:
        - role: pod
      pipeline_stages:
        - docker: {}
      relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          action: drop
          regex: monitoring|kube-system|kube-node-lease
        - action: replace
          source_labels: [__meta_kubernetes_pod_uid, __meta_kubernetes_pod_container_name]
          separator: /
          replacement: /var/log/pods/*$1/*.log
          target_label: __path__
        - source_labels: [__meta_kubernetes_pod_node_name]
          target_label: __host__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          separator: /
          source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
          target_label: job
        - action: replace
          source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        - action: replace
          source_labels: [__meta_kubernetes_pod_name]
          target_label: pod_name
        - action: replace
          source_labels: [__meta_kubernetes_pod_container_name]
          target_label: pod_container_name
        - action: replace
          source_labels: [__meta_kubernetes_pod_container_image]
          target_label: pod_container_image
--- # Deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promtail-deployment
  namespace: monitoring
  labels:
    app: promtail
spec:
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      serviceAccountName: promtail-serviceaccount
      containers:
      - name: promtail
        image: grafana/promtail
        imagePullPolicy: IfNotPresent
        args:
        - "-config.file=/etc/promtail/promtail.local.yaml"
        env:
        - name: "HOSTNAME"
          valueFrom:
            fieldRef:
              fieldPath: "spec.nodeName"
        ports:
        - name: promtail-http
          containerPort: 9080
        volumeMounts:
        - name: pod-logs
          mountPath: /var/log/pods
        - name: promtail-config
          mountPath: /etc/promtail
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      volumes:
      - name: pod-logs
        hostPath:
          path: /var/log/pods
      - name: varlibdockercontainers
        hostPath: 
          path: /var/lib/docker/containers
      - name: promtail-config
        configMap:
          name: promtail-configmap
--- # Service.yaml
apiVersion: v1
kind: Service
metadata:
  name: promtail-svc
  namespace: monitoring
  labels:
    service: promtail
spec:
  type: ClusterIP
  selector:
    app: promtail
  ports:
  - name: promtail-svc
    protocol: TCP
    port: 9080
    targetPort: promtail-http
--- # ClusterRole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail-clusterrole
  namespace: monitoring
rules:
  - apiGroups: [ "" ]
    resources:
      - nodes
      - services
      - pods
    verbs:
      - get
      - watch
      - list
--- # ServiceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail-serviceaccount
  namespace: monitoring
--- # ClusterRoleBinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail-clusterrolebinding
  namespace: monitoring
subjects:
- kind: ServiceAccount
  name: promtail-serviceaccount
  namespace: monitoring
roleRef:
  kind: ClusterRole
  name: promtail-clusterrole
  apiGroup: rbac.authorization.k8s.io

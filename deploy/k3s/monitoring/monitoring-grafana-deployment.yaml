--- # PersistentVolumeClaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
--- # ConfigMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-configmap
  namespace: monitoring
data: 
  ds.local.yaml: |
    apiVersion: 1

    datasources:
    - name: Loki
      type: loki
      uid: loki-logs
      orgId: 1
      url: http://loki-svc:3100
      basicAuth: false
      version: 1
      editable: false
    - name: Prometheus
      type: prometheus
      uid: prom-metrics
      orgId: 1
      url: http://prometheus-svc:9090
      editable: false
      isDefault: true
--- # Deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        imagePullPolicy: IfNotPresent
        ports:
        - name: grafana
          containerPort: 3000
        volumeMounts:
        - name: grafana-provisioning
          mountPath: /etc/grafana/provisioning/datasources
          readOnly: true
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-provisioning
        configMap:
          name: grafana-configmap
          items:
          - key: "ds.local.yaml"
            path: "ds.local.yaml"
--- # Service.yaml
apiVersion: v1
kind: Service
metadata:
  name: grafana-svc
  namespace: monitoring
  labels:
    service: grafana
spec:
  type: ClusterIP
  selector:
    app: grafana
  ports:
  - name: grafana-svc
    protocol: TCP
    port: 3000
    targetPort: grafana
